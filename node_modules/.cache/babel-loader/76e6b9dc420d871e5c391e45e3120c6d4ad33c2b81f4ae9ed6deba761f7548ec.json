{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zbook\\\\Desktop\\\\eSignature app\\\\pfe-front\\\\src\\\\auth\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // ✅ Défini ici\n  const [token, setToken] = useState(null);\n  const login = async credentials => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText || \"Invalid credentials\");\n      }\n      const userData = await response.json();\n      setUser(userData); // ✅ setUser est maintenant défini\n      return userData;\n    } catch (error) {\n      console.error(\"Login error:\", error.message);\n      throw error;\n    }\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"accessToken\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      isAdmin,\n      logout,\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GjQvNlviHZiIEOgy+2FWx3ml/o0=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","login","credentials","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","userData","json","error","console","message","isAdmin","role","logout","localStorage","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/zbook/Desktop/eSignature app/pfe-front/src/auth/AuthProvider.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);         // ✅ Défini ici\r\n  const [token, setToken] = useState(null);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText || \"Invalid credentials\");\r\n      }\r\n\r\n      const userData = await response.json();\r\n      setUser(userData);                          // ✅ setUser est maintenant défini\r\n      return userData;\r\n\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user?.role === \"admin\";\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"accessToken\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, isAdmin, logout, token, setToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAS;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,IAAI,qBAAqB,CAAC;MACrD;MAEA,MAAMG,QAAQ,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MACtCjB,OAAO,CAACgB,QAAQ,CAAC,CAAC,CAA0B;MAC5C,OAAOA,QAAQ;IAEjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC5C,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMG,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAAtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuB,IAAI,MAAK,OAAO;EAC/B,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBvB,OAAO,CAAC,IAAI,CAAC;IACbwB,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;EAED,oBACE/B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE5B,IAAI;MAAEI,KAAK;MAAEkB,OAAO;MAAEE,MAAM;MAAEtB,KAAK;MAAEC;IAAS,CAAE;IAAAL,QAAA,EAC5EA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CAzCWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA2CzB,OAAO,MAAMqC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3C,UAAU,CAACI,WAAW,CAAC;AAAA;AAACuC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}